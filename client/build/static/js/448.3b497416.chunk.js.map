{"version":3,"file":"static/js/448.3b497416.chunk.js","mappings":"qLAEA,MAAMA,EAAeC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,wBAA0B,wBACrDC,GAASC,EAAAA,EAAAA,IAAGJ,G,aCDlB,MAsBA,EAtBsBK,KAElBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA4CC,SAAA,EACzDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yEAAwEC,SAAA,EACrFC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SAAC,cAC1BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0BAAyBC,SAAC,eACzCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,SAAC,uBAElCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yEAAwEC,SAAA,EACrFC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SAAC,YAC1BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0BAAyBC,SAAC,eACzCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,SAAC,wBAElCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wEAAuEC,SAAA,EACpFC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SAAC,gBAC1BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0BAAyBC,SAAC,eACzCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,SAAC,yBCqCxC,EArDqBE,KACnB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,IAClCG,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAS,QACpCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,GAOnC,OACEP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,6BAA4BC,SAAC,mBAC3CC,EAAAA,EAAAA,KAAA,SACEW,KAAK,OACLC,YAAY,SACZC,MAAOX,EACPY,SAAUC,GAAKZ,EAAUY,EAAEC,OAAOH,OAClCf,UAAU,oCAEZE,EAAAA,EAAAA,KAAA,SACEW,KAAK,SACLC,YAAY,WACZC,MAAOR,EACPS,SAAUC,GAAKT,EAAYW,OAAOF,EAAEC,OAAOH,QAC3Cf,UAAU,oCAEZE,EAAAA,EAAAA,KAAA,SACEW,KAAK,SACLC,YAAY,QACZC,MAAOJ,EACPK,SAAUC,GAAKL,EAASO,OAAOF,EAAEC,OAAOH,QACxCf,UAAU,oCAEZD,EAAAA,EAAAA,MAAA,UACEgB,MAAON,EACPO,SAAUC,GAAKP,EAAaO,EAAEC,OAAOH,OACrCf,UAAU,iCAAgCC,SAAA,EAE1CC,EAAAA,EAAAA,KAAA,UAAQa,MAAM,MAAKd,SAAC,SACpBC,EAAAA,EAAAA,KAAA,UAAQa,MAAM,OAAMd,SAAC,aAEvBC,EAAAA,EAAAA,KAAA,UACEkB,QAtCaC,KAEjBC,MAAM,WAAWb,eAAuBF,eAAsBH,QAAaO,MAqCvEX,UAAU,6EAA4EC,SACvF,oBCMP,EApDyBsB,KACvB,MAAMC,EAAY,CAChBC,WAAY,MACZC,QAAS,KACTC,UAAW,KACXC,OAAQ,CACN,CAAExB,OAAQ,WAAYG,SAAU,GAAIsB,SAAU,KAAMC,IAAK,MACzD,CAAE1B,OAAQ,WAAYG,SAAU,GAAIsB,SAAU,KAAMC,IAAK,MACzD,CAAE1B,OAAQ,MAAOG,SAAU,GAAIsB,SAAU,KAAMC,IAAK,QAIxD,OACE/B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uCAAsCC,SAAC,uBAErDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,EACxCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,SAAC,iBAC/BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,CAAC,SAAEuB,EAAUC,WAAWM,wBAE7DhC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,EACxCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,SAAC,gBAC/BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,CAAC,UAAGuB,EAAUE,QAAQK,wBAE1EhC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uCAAsCC,SAAA,EACnDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,SAAC,gBAC/BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,CAAC,UAAGuB,EAAUG,UAAUI,2BAI9E7B,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iCAAgCC,SAAC,cAC/CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SACvBuB,EAAUI,OAAOI,IAAI,CAACC,EAAOC,KAC5BnC,EAAAA,EAAAA,MAAA,OAAiBC,UAAU,kDAAiDC,SAAA,EAC1EF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEgC,EAAM7B,UACpCL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,CAAEgC,EAAM1B,SAAS,iBAEzDR,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,CAAC,SAAEgC,EAAMH,IAAIC,qBAC3ChC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,CAAC,WAClCgC,EAAMH,IAAMG,EAAMJ,UAAUE,yBAR5BG,UCoBpB,EAtDwBC,KA0BpBpC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uCAAsCC,SAAC,sBAErDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SA5Bb,CACf,CACEG,OAAQ,WACRgC,eAAgB,MAChBC,WAAY,GACZnB,OAAQ,KACRoB,UAAW,uDAEb,CACElC,OAAQ,WACRgC,eAAgB,OAChBC,WAAY,GACZnB,OAAQ,KACRoB,UAAW,4CAEb,CACElC,OAAQ,OACRgC,eAAgB,OAChBC,WAAY,GACZnB,OAAQ,KACRoB,UAAW,6CASCN,IAAI,CAACO,EAASL,KACtBnC,EAAAA,EAAAA,MAAA,OAAiBC,UAAU,wCAAuCC,SAAA,EAChEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mCAAkCC,SAAA,EAC/CF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SAAEsC,EAAQnC,UACpCL,EAAAA,EAAAA,MAAA,OAAKC,UAAW,sBACa,QAA3BuC,EAAQH,eAA2B,iBACR,SAA3BG,EAAQH,eAA4B,eAAiB,mBACpDnC,SAAA,CACAsC,EAAQH,eAAe,YAAKG,EAAQrB,cAGzCnB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA4CC,SAAA,CACxDsC,EAAQF,WAAW,sBAGxBnC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6BAA4BC,SAAEsC,EAAQD,cAf3CJ,S,cC9BpB,MAoEA,EApEmBM,KACjB,MAAOC,EAAMC,IAAWpC,EAAAA,EAAAA,UAAS,KAC1BqC,EAASC,IAActC,EAAAA,EAAAA,WAAS,GAmBvC,OAjBAuC,EAAAA,EAAAA,WAAU,KACUC,WAChB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAC3B,8DAA8DvD,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYwD,0BAE5ER,EAAQK,EAASI,KAAKC,SAASC,MAAM,EAAG,GAC1C,CAAE,MAAOC,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,CAAC,QACCV,GAAW,EACb,GAGFY,IACC,KAGDzD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uCAAsCC,SAAC,gBAEpD0C,GACCzC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wCAAuCC,UACpDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8EAEfyC,EAAKgB,OAAS,GAChBvD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SACvBwC,EAAKT,IAAI,CAAC0B,EAAMxB,KAAK,IAAAyB,EAAA,OACpBzD,EAAAA,EAAAA,KAAA,KAEE0D,KAAMF,EAAKG,IACX3C,OAAO,SACP4C,IAAI,sBACJ9D,UAAU,mDAAkDC,UAE5DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mCAAkCC,SAAEyD,EAAKK,SACvDhE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCC,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,QAAAD,UAAkB,QAAX0D,EAAAD,EAAKM,cAAM,IAAAL,OAAA,EAAXA,EAAaM,OAAQ,aAC5B/D,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAMC,SAAC,YACvBC,EAAAA,EAAAA,KAAA,QAAAD,SAAO,IAAIiE,KAAKR,EAAKS,aAAaC,6BAGrCV,EAAKW,aACJnE,EAAAA,EAAAA,KAAA,OACEoE,IAAKZ,EAAKW,WACVE,IAAKb,EAAKK,MACV/D,UAAU,4CAnBXkC,QA2BXhC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iCAAgCC,SAAC,0BC/BxD,EA9BkBuE,KAUdzE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uCAAsCC,SAAC,eAErDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SAZZ,CAChB,CAAEG,OAAQ,WAAYO,MAAO,QAAS8D,OAAQ,KAAOC,cAAe,KACpE,CAAEtE,OAAQ,WAAYO,MAAO,OAAS8D,OAAQ,KAAMC,cAAe,KACnE,CAAEtE,OAAQ,MAAOO,MAAO,QAAS8D,QAAS,MAAOC,eAAgB,KACjE,CAAEtE,OAAQ,OAAQO,MAAO,OAAS8D,OAAQ,MAAOC,cAAe,MAChE,CAAEtE,OAAQ,aAAcO,MAAO,KAAS8D,OAAQ,MAAQC,cAAe,OAQxD1C,IAAI,CAACC,EAAOC,KACrBnC,EAAAA,EAAAA,MAAA,OAAiBC,UAAU,oCAAmCC,SAAA,EAC5DC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEgC,EAAM7B,UACpCL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,CAAC,SAAEgC,EAAMtB,MAAMgE,QAAQ,OACrD5E,EAAAA,EAAAA,MAAA,OAAKC,UAAW,YAAWiC,EAAMwC,QAAU,EAAI,iBAAmB,gBAAiBxE,SAAA,CAChFgC,EAAMwC,QAAU,EAAI,SAAM,SAAI,IAAEG,KAAKC,IAAI5C,EAAMwC,OAAOE,QAAQ,IAAI,KAAG1C,EAAMyC,cAAc,aALtFxC,S,cCNpB,MAAM4C,GAAcC,EAAAA,EAAAA,MAAK,IAAM,qDACzBC,GAAiBD,EAAAA,EAAAA,MAAK,IAAM,qDAC5BE,GAAeF,EAAAA,EAAAA,MAAK,IAAM,+BAS1BG,EAAYA,KAChB,MAAOC,EAAYC,IAAiB9E,EAAAA,EAAAA,UAAS,CAAC,IACvCqC,EAASC,IAActC,EAAAA,EAAAA,WAAS,IAChC+E,EAAYC,IAAiBhF,EAAAA,EAAAA,UAAS4D,KAAKqB,OAG5CC,GAAgBC,EAAAA,EAAAA,SAAQ,IACrBC,OAAOC,OAAOR,GAAYnD,IAAIC,IAAK,IACrCA,EACHyC,eAAiBzC,EAAMtB,MAAQsB,EAAM2D,eAAiB3D,EAAM2D,cAAiB,OAE9E,CAACT,IAGEU,GAAmBC,EAAAA,EAAAA,aAAa3C,IACpCiC,EAAcW,GAEOL,OAAOM,KAAK7C,GAAM8C,KACnCC,IAAQH,EAAKG,IAAQH,EAAKG,GAAKvF,QAAUwC,EAAK+C,GAAKvF,OAGjC,IAAKoF,KAAS5C,GAAS4C,GAE7CT,EAAcpB,KAAKqB,QAClB,KAEH1C,EAAAA,EAAAA,WAAU,KA/BV,oDACA,oDACA,8BAiCE,MAAMsD,GP/CsBC,EO+COP,EP9CrCjG,EAAOyG,GAAG,UAAW,KACnB9C,QAAQ+C,IAAI,mCACZ1G,EAAO2G,KAAK,YAAa,CAAC,QAAS,YAAa,WAAY,YAAa,WAAY,WAGvF3G,EAAOyG,GAAG,iBAAmBlD,IAC3BiD,EAASjD,KAGXvD,EAAOyG,GAAG,cAAgBlD,OAI1BvD,EAAOyG,GAAG,aAAc,KACtB9C,QAAQ+C,IAAI,0CAGP,IAAM1G,EAAOuG,cAlBUC,MOgE5B,MAdyBtD,WACvB,IACE,MAAMC,QAAiByD,MAAM,oBACvBrD,QAAaJ,EAAS0D,OAC5BrB,EAAcjC,GACdP,GAAW,EACb,CAAE,MAAOU,GACPC,QAAQD,MAAM,6BAA8BA,GAC5CV,GAAW,EACb,GAGF8D,GAEO,IAAMP,KACZ,CAACN,IAsBJ,OAAIlD,GAEAzC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4CAA2CC,UACxDC,EAAAA,EAAAA,KAACyG,EAAAA,EAAM,CAACC,KAAK,UAMjB7G,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,KAACJ,EAAa,CAACqD,KAAMgC,EAAYE,WAAYA,KAE7CtF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EACpDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,UAC5BC,EAAAA,EAAAA,KAAC2G,EAAAA,SAAQ,CAACC,UAAU5G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0EAAyEC,UAACC,EAAAA,EAAAA,KAACyG,EAAAA,EAAM,MAAU1G,UAC5HC,EAAAA,EAAAA,KAAC4E,EAAW,CAAC3B,KAAMgC,SAGvBpF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAACC,EAAY,KACbD,EAAAA,EAAAA,KAACsE,EAAS,WAIdzE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EACpDC,EAAAA,EAAAA,KAAC2G,EAAAA,SAAQ,CAACC,UAAU5G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0EAAyEC,UAACC,EAAAA,EAAAA,KAACyG,EAAAA,EAAM,MAAU1G,UAC5HC,EAAAA,EAAAA,KAAC8E,EAAc,OAEjB9E,EAAAA,EAAAA,KAAC2G,EAAAA,SAAQ,CAACC,UAAU5G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0EAAyEC,UAACC,EAAAA,EAAAA,KAACyG,EAAAA,EAAM,MAAU1G,UAC5HC,EAAAA,EAAAA,KAAC+E,EAAY,UAIjBlF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EACpDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uCAAsCC,SAAC,qBApDzDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uBAAsBC,SAClCuF,EAAcnC,MAAM,EAAG,IAAIrB,IAAI,CAACC,EAAOC,KACtCnC,EAAAA,EAAAA,MAAA,OAAiBC,UAAU,uCAAsCC,SAAA,EAC/DC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEgC,EAAM7B,UACpCL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,CAAC,SAAEgC,EAAMtB,MAAMgE,QAAQ,OAClDzE,EAAAA,EAAAA,KAAA,OAAKF,UAAW,eAAciC,EAAMwC,QAAU,EAAI,iBAAmB,gBAAiBxE,SACnFgC,EAAMwC,OAAOE,QAAQ,MAExB5E,EAAAA,EAAAA,MAAA,OAAKC,UAAW,eAAciC,EAAMyC,eAAiB,EAAI,iBAAmB,gBAAiBzE,SAAA,CAC1FgC,EAAMyC,cAAcC,QAAQ,GAAG,SAP1BzC,UAqDZhC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACqB,EAAgB,OAEnBrB,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACiC,EAAe,UAIpBjC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,UAC/BC,EAAAA,EAAAA,KAACsC,EAAU,UAMnB,EAAeuE,EAAAA,KAAW7B,E","sources":["services/marketService.js","components/MarketSummary.jsx","components/TradingPanel.jsx","components/PortfolioSummary.jsx","components/TradingInsights.jsx","components/MarketNews.jsx","components/Watchlist.jsx","pages/Dashboard.jsx"],"sourcesContent":["import io from 'socket.io-client';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000';\r\nconst socket = io(API_BASE_URL);\r\n\r\nexport const connectToMarket = (callback) => {\r\n  socket.on('connect', () => {\r\n    console.log('Connected to market data server');\r\n    socket.emit('subscribe', ['NIFTY', 'BANKNIFTY', 'RELIANCE', 'TATASTEEL', 'HDFCBANK', 'INFY']);\r\n  });\r\n  \r\n  socket.on('real-time-data', (data) => {\r\n    callback(data);\r\n  });\r\n  \r\n  socket.on('sector-data', (data) => {\r\n    // Handle sector data updates\r\n  });\r\n  \r\n  socket.on('disconnect', () => {\r\n    console.log('Disconnected from market data server');\r\n  });\r\n  \r\n  return () => socket.disconnect();\r\n};\r\n\r\nexport const fetchMarketData = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/stocks/market`);\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching market data:', error);\r\n    return [];\r\n  }\r\n}; ","import React from 'react';\r\n\r\nconst MarketSummary = () => {\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n      <div className=\"bg-gradient-to-r from-blue-500 to-indigo-600 rounded-xl p-4 text-white\">\r\n        <h3 className=\"font-bold\">NIFTY 50</h3>\r\n        <div className=\"text-2xl font-bold mt-2\">18,200.15</div>\r\n        <div className=\"text-green-300\">+45.30 (0.25%)</div>\r\n      </div>\r\n      <div className=\"bg-gradient-to-r from-purple-500 to-pink-500 rounded-xl p-4 text-white\">\r\n        <h3 className=\"font-bold\">SENSEX</h3>\r\n        <div className=\"text-2xl font-bold mt-2\">61,350.45</div>\r\n        <div className=\"text-green-300\">+120.75 (0.20%)</div>\r\n      </div>\r\n      <div className=\"bg-gradient-to-r from-red-500 to-orange-500 rounded-xl p-4 text-white\">\r\n        <h3 className=\"font-bold\">BANK NIFTY</h3>\r\n        <div className=\"text-2xl font-bold mt-2\">39,500.75</div>\r\n        <div className=\"text-green-300\">+95.50 (0.24%)</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarketSummary; ","import React, { useState } from 'react';\r\n\r\nconst TradingPanel = () => {\r\n  const [symbol, setSymbol] = useState('');\r\n  const [quantity, setQuantity] = useState(0);\r\n  const [orderType, setOrderType] = useState('BUY');\r\n  const [price, setPrice] = useState(0);\r\n\r\n  const placeOrder = () => {\r\n    // Order placement logic (to be implemented)\r\n    alert(`Placing ${orderType} order for ${quantity} shares of ${symbol} at ${price}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-xl shadow-md p-4\">\r\n      <h2 className=\"text-lg font-semibold mb-4\">Trading Panel</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Symbol\"\r\n        value={symbol}\r\n        onChange={e => setSymbol(e.target.value)}\r\n        className=\"w-full mb-2 p-2 border rounded\"\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Quantity\"\r\n        value={quantity}\r\n        onChange={e => setQuantity(Number(e.target.value))}\r\n        className=\"w-full mb-2 p-2 border rounded\"\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Price\"\r\n        value={price}\r\n        onChange={e => setPrice(Number(e.target.value))}\r\n        className=\"w-full mb-2 p-2 border rounded\"\r\n      />\r\n      <select\r\n        value={orderType}\r\n        onChange={e => setOrderType(e.target.value)}\r\n        className=\"w-full mb-2 p-2 border rounded\"\r\n      >\r\n        <option value=\"BUY\">Buy</option>\r\n        <option value=\"SELL\">Sell</option>\r\n      </select>\r\n      <button\r\n        onClick={placeOrder}\r\n        className=\"w-full bg-primary text-white py-2 rounded-lg hover:bg-secondary transition\"\r\n      >\r\n        Place Order\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TradingPanel; ","import React from 'react';\r\n\r\nconst PortfolioSummary = () => {\r\n  const portfolio = {\r\n    totalValue: 125000,\r\n    dayGain: 2500,\r\n    totalGain: 15000,\r\n    stocks: [\r\n      { symbol: 'RELIANCE', quantity: 10, avgPrice: 2400, ltp: 2450 },\r\n      { symbol: 'HDFCBANK', quantity: 15, avgPrice: 1600, ltp: 1650 },\r\n      { symbol: 'TCS', quantity: 20, avgPrice: 3200, ltp: 3250 },\r\n    ]\r\n  };\r\n  \r\n  return (\r\n    <div className=\"bg-white rounded-xl shadow-md p-4\">\r\n      <h2 className=\"text-xl font-bold text-gray-800 mb-4\">Portfolio Summary</h2>\r\n      \r\n      <div className=\"grid grid-cols-2 gap-4 mb-6\">\r\n        <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n          <div className=\"text-gray-500\">Total Value</div>\r\n          <div className=\"text-2xl font-bold\">₹{portfolio.totalValue.toLocaleString()}</div>\r\n        </div>\r\n        <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n          <div className=\"text-gray-500\">Day's Gain</div>\r\n          <div className=\"text-2xl font-bold text-green-600\">+₹{portfolio.dayGain.toLocaleString()}</div>\r\n        </div>\r\n        <div className=\"bg-gray-50 p-4 rounded-lg col-span-2\">\r\n          <div className=\"text-gray-500\">Total Gain</div>\r\n          <div className=\"text-2xl font-bold text-green-600\">+₹{portfolio.totalGain.toLocaleString()}</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <h3 className=\"font-medium text-gray-700 mb-2\">Holdings</h3>\r\n      <div className=\"space-y-3\">\r\n        {portfolio.stocks.map((stock, index) => (\r\n          <div key={index} className=\"flex justify-between items-center border-b pb-2\">\r\n            <div>\r\n              <div className=\"font-medium\">{stock.symbol}</div>\r\n              <div className=\"text-sm text-gray-500\">{stock.quantity} shares</div>\r\n            </div>\r\n            <div className=\"text-right\">\r\n              <div className=\"font-semibold\">₹{stock.ltp.toLocaleString()}</div>\r\n              <div className=\"text-sm text-green-600\">\r\n                +₹{(stock.ltp - stock.avgPrice).toLocaleString()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PortfolioSummary; ","import React from 'react';\r\n\r\nconst TradingInsights = () => {\r\n  const insights = [\r\n    { \r\n      symbol: 'RELIANCE', \r\n      recommendation: 'BUY', \r\n      confidence: 85,\r\n      target: 2600,\r\n      rationale: 'Strong quarterly results and new energy initiatives'\r\n    },\r\n    { \r\n      symbol: 'HDFCBANK', \r\n      recommendation: 'HOLD', \r\n      confidence: 70,\r\n      target: 1700,\r\n      rationale: 'Stable growth but facing margin pressure'\r\n    },\r\n    { \r\n      symbol: 'INFY', \r\n      recommendation: 'SELL', \r\n      confidence: 65,\r\n      target: 1400,\r\n      rationale: 'Valuation concerns and slowing deal wins'\r\n    }\r\n  ];\r\n  \r\n  return (\r\n    <div className=\"bg-white rounded-xl shadow-md p-4\">\r\n      <h2 className=\"text-xl font-bold text-gray-800 mb-4\">Trading Insights</h2>\r\n      \r\n      <div className=\"space-y-4\">\r\n        {insights.map((insight, index) => (\r\n          <div key={index} className=\"border-b pb-4 last:border-0 last:pb-0\">\r\n            <div className=\"flex justify-between items-start\">\r\n              <div>\r\n                <div className=\"font-bold\">{insight.symbol}</div>\r\n                <div className={`text-lg font-bold ${\r\n                  insight.recommendation === 'BUY' ? 'text-green-600' : \r\n                  insight.recommendation === 'SELL' ? 'text-red-600' : 'text-yellow-600'\r\n                }`}>\r\n                  {insight.recommendation} @ ₹{insight.target}\r\n                </div>\r\n              </div>\r\n              <div className=\"bg-gray-100 px-3 py-1 rounded-full text-sm\">\r\n                {insight.confidence}% confidence\r\n              </div>\r\n            </div>\r\n            <p className=\"text-gray-600 mt-2 text-sm\">{insight.rationale}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TradingInsights; ","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst MarketNews = () => {\r\n  const [news, setNews] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchNews = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://newsapi.org/v2/top-headlines?q=stock+market&apiKey=${process.env.REACT_APP_NEWS_API_KEY}`\r\n        );\r\n        setNews(response.data.articles.slice(0, 5));\r\n      } catch (error) {\r\n        console.error('Error fetching news:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchNews();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-xl shadow-md p-4\">\r\n      <h2 className=\"text-xl font-bold text-gray-800 mb-4\">Market News</h2>\r\n      \r\n      {loading ? (\r\n        <div className=\"flex justify-center items-center h-40\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-blue-500\"></div>\r\n        </div>\r\n      ) : news.length > 0 ? (\r\n        <div className=\"space-y-4\">\r\n          {news.map((item, index) => (\r\n            <a \r\n              key={index} \r\n              href={item.url} \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\"\r\n              className=\"block hover:bg-gray-50 p-2 rounded-lg transition\"\r\n            >\r\n              <div className=\"flex items-start\">\r\n                <div className=\"flex-1 min-w-0\">\r\n                  <h3 className=\"font-bold text-gray-800 truncate\">{item.title}</h3>\r\n                  <div className=\"flex text-sm text-gray-500 mt-1\">\r\n                    <span>{item.source?.name || 'Unknown'}</span>\r\n                    <span className=\"mx-2\">•</span>\r\n                    <span>{new Date(item.publishedAt).toLocaleTimeString()}</span>\r\n                  </div>\r\n                </div>\r\n                {item.urlToImage && (\r\n                  <img \r\n                    src={item.urlToImage} \r\n                    alt={item.title} \r\n                    className=\"ml-4 w-16 h-16 object-cover rounded\"\r\n                  />\r\n                )}\r\n              </div>\r\n            </a>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center py-8 text-gray-500\">\r\n          No news available\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarketNews; ","import React from 'react';\r\n\r\nconst Watchlist = () => {\r\n  const watchlist = [\r\n    { symbol: 'RELIANCE', price: 2450.75, change: 12.50, changePercent: 0.51 },\r\n    { symbol: 'HDFCBANK', price: 1650.30, change: 8.45, changePercent: 0.51 },\r\n    { symbol: 'TCS', price: 3250.25, change: -15.75, changePercent: -0.48 },\r\n    { symbol: 'INFY', price: 1425.50, change: 22.25, changePercent: 1.58 },\r\n    { symbol: 'BAJFINANCE', price: 7250.00, change: 125.50, changePercent: 1.76 }\r\n  ];\r\n  \r\n  return (\r\n    <div className=\"bg-white rounded-xl shadow-md p-4\">\r\n      <h2 className=\"text-xl font-bold text-gray-800 mb-4\">Watchlist</h2>\r\n      \r\n      <div className=\"space-y-3\">\r\n        {watchlist.map((stock, index) => (\r\n          <div key={index} className=\"flex justify-between items-center\">\r\n            <div className=\"font-medium\">{stock.symbol}</div>\r\n            <div className=\"text-right\">\r\n              <div className=\"font-semibold\">₹{stock.price.toFixed(2)}</div>\r\n              <div className={`text-sm ${stock.change >= 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n                {stock.change >= 0 ? '↑' : '↓'} {Math.abs(stock.change.toFixed(2))} ({stock.changePercent}%)\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Watchlist; ","import React, { useState, useEffect, useMemo, useCallback, lazy, Suspense } from 'react';\r\nimport { connectToMarket } from '../services/marketService';\r\nimport MarketSummary from '../components/MarketSummary';\r\nimport TradingPanel from '../components/TradingPanel';\r\nimport PortfolioSummary from '../components/PortfolioSummary';\r\nimport TradingInsights from '../components/TradingInsights';\r\nimport MarketNews from '../components/MarketNews';\r\nimport Watchlist from '../components/Watchlist';\r\nimport Loader from '../components/Loader';\r\n\r\n// Lazy load heavy components with preloading\r\nconst MarketChart = lazy(() => import('../components/MarketChart'));\r\nconst SectorAnalysis = lazy(() => import('../components/SectorAnalysis'));\r\nconst AITradingBot = lazy(() => import('../components/AITradingBot'));\r\n\r\n// Preload components in background\r\nconst preloadComponents = () => {\r\n  import('../components/MarketChart');\r\n  import('../components/SectorAnalysis');\r\n  import('../components/AITradingBot');\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const [marketData, setMarketData] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [lastUpdate, setLastUpdate] = useState(Date.now());\r\n\r\n  // Memoized data processing\r\n  const processedData = useMemo(() => {\r\n    return Object.values(marketData).map(stock => ({\r\n      ...stock,\r\n      changePercent: ((stock.price - stock.previousClose) / stock.previousClose) * 100\r\n    }));\r\n  }, [marketData]);\r\n\r\n  // Efficient data handler\r\n  const handleMarketData = useCallback((data) => {\r\n    setMarketData(prev => {\r\n      // Only update if data has changed\r\n      const hasChanged = Object.keys(data).some(\r\n        key => !prev[key] || prev[key].price !== data[key].price\r\n      );\r\n      \r\n      return hasChanged ? { ...prev, ...data } : prev;\r\n    });\r\n    setLastUpdate(Date.now());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Preload components on initial render\r\n    preloadComponents();\r\n    \r\n    const disconnect = connectToMarket(handleMarketData);\r\n    \r\n    // Initial data load\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        const response = await fetch('/api/market/data');\r\n        const data = await response.json();\r\n        setMarketData(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Failed to load market data', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchInitialData();\r\n    \r\n    return () => disconnect();\r\n  }, [handleMarketData]);\r\n\r\n  // Virtualized rendering for large datasets\r\n  const renderMarketOverview = () => {\r\n    return (\r\n      <div className=\"overflow-y-auto h-96\">\r\n        {processedData.slice(0, 50).map((stock, index) => (\r\n          <div key={index} className=\"grid grid-cols-4 gap-4 py-2 border-b\">\r\n            <div className=\"font-medium\">{stock.symbol}</div>\r\n            <div className=\"text-right\">₹{stock.price.toFixed(2)}</div>\r\n            <div className={`text-right ${stock.change >= 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n              {stock.change.toFixed(2)}\r\n            </div>\r\n            <div className={`text-right ${stock.changePercent >= 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n              {stock.changePercent.toFixed(2)}%\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-screen\">\r\n        <Loader size=\"xl\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 gap-6\">\r\n      <MarketSummary data={marketData} lastUpdate={lastUpdate} />\r\n      \r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n        <div className=\"lg:col-span-2\">\r\n          <Suspense fallback={<div className=\"bg-white rounded-xl shadow-md p-4 h-96 flex items-center justify-center\"><Loader /></div>}>\r\n            <MarketChart data={marketData} />\r\n          </Suspense>\r\n        </div>\r\n        <div className=\"space-y-6\">\r\n          <TradingPanel />\r\n          <Watchlist />\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        <Suspense fallback={<div className=\"bg-white rounded-xl shadow-md p-4 h-96 flex items-center justify-center\"><Loader /></div>}>\r\n          <SectorAnalysis />\r\n        </Suspense>\r\n        <Suspense fallback={<div className=\"bg-white rounded-xl shadow-md p-4 h-96 flex items-center justify-center\"><Loader /></div>}>\r\n          <AITradingBot />\r\n        </Suspense>\r\n      </div>\r\n      \r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n        <div className=\"bg-white rounded-xl shadow-md p-4\">\r\n          <h2 className=\"text-xl font-bold text-gray-800 mb-4\">Market Overview</h2>\r\n          {renderMarketOverview()}\r\n        </div>\r\n        <div>\r\n          <PortfolioSummary />\r\n        </div>\r\n        <div>\r\n          <TradingInsights />\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"grid grid-cols-1\">\r\n        <MarketNews />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Dashboard); "],"names":["API_BASE_URL","process","REACT_APP_API_BASE_URL","socket","io","MarketSummary","_jsxs","className","children","_jsx","TradingPanel","symbol","setSymbol","useState","quantity","setQuantity","orderType","setOrderType","price","setPrice","type","placeholder","value","onChange","e","target","Number","onClick","placeOrder","alert","PortfolioSummary","portfolio","totalValue","dayGain","totalGain","stocks","avgPrice","ltp","toLocaleString","map","stock","index","TradingInsights","recommendation","confidence","rationale","insight","MarketNews","news","setNews","loading","setLoading","useEffect","async","response","axios","get","REACT_APP_NEWS_API_KEY","data","articles","slice","error","console","fetchNews","length","item","_item$source","href","url","rel","title","source","name","Date","publishedAt","toLocaleTimeString","urlToImage","src","alt","Watchlist","change","changePercent","toFixed","Math","abs","MarketChart","lazy","SectorAnalysis","AITradingBot","Dashboard","marketData","setMarketData","lastUpdate","setLastUpdate","now","processedData","useMemo","Object","values","previousClose","handleMarketData","useCallback","prev","keys","some","key","disconnect","callback","on","log","emit","fetch","json","fetchInitialData","Loader","size","Suspense","fallback","React"],"sourceRoot":""}