{"version":3,"file":"static/js/507.a7fb18e2.chunk.js","mappings":"yMAIA,MAAMA,EAAUC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,kB,aCE5B,MA+SA,EA/ScC,KACZ,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAC5BK,EAAKC,IAAUN,EAAAA,EAAAA,UAAS,KACxBO,EAAaC,IAAkBR,EAAAA,EAAAA,UAAS,UACxCS,EAAMC,IAAWV,EAAAA,EAAAA,UAAS,IAC1BW,EAASC,IAAcZ,EAAAA,EAAAA,UAAS,IACjCa,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,OACP,MAAEC,GAAUF,GACXG,EAAUC,IAAenB,EAAAA,EAAAA,WAAS,IAClCoB,EAAMC,IAAWrB,EAAAA,EAAAA,UAAS,KAC1BsB,EAAOC,IAAYvB,EAAAA,EAAAA,UAAS,IA6EnC,OACEwB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uHAAsHC,UACnIC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oDACVG,MAAO,CACLC,WAAY,2BACZC,WAAY,6BACZC,cAAe,OACfL,SAAC,kBAGPF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+CAGjBE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,2BAA0BC,SAAA,EACvCF,EAAAA,EAAAA,KAAA,UACEQ,QAASA,IAAMb,GAAY,GAC3BM,UAAW,2DACRP,EAEG,8CADA,oCAEHQ,SACJ,WAGDF,EAAAA,EAAAA,KAAA,UACEQ,QAASA,IAAMb,GAAY,GAC3BM,UAAW,2DACTP,EACI,mCACA,+CACHQ,SACJ,gBAKHF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iDAAgDC,UAC7DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,CAChBR,GAuGAS,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,uCAAsCC,SAAC,eACxDF,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLC,YAAY,WACZC,MAAOf,EACPgB,SAAWC,GAAMhB,EAAQgB,EAAEC,OAAOH,OAClCV,UAAU,+GAGdE,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,uCAAsCC,SAAC,WACxDF,EAAAA,EAAAA,KAAA,SACES,KAAK,QACLC,YAAY,iBACZC,MAAOrC,EACPsC,SAAWC,GAAMtC,EAASsC,EAAEC,OAAOH,OACnCV,UAAU,+GAGdE,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,uCAAsCC,SAAC,cACxDF,EAAAA,EAAAA,KAAA,SACES,KAAK,WACLC,YAAY,mDACZC,MAAOlC,EACPmC,SAAWC,GAAMnC,EAAYmC,EAAEC,OAAOH,OACtCV,UAAU,+GAGdD,EAAAA,EAAAA,KAAA,UACEQ,QAlMKO,UACnB3B,EAAW,IACX,IACE,MAAM4B,ODFYD,WACtB,IACE,MAAMC,QAAiBC,MAAM,0CAA2C,CACtEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUC,KAGjBC,QAAaR,EAASS,OAE5B,IAAKT,EAASU,GACZ,MAAM,IAAIC,MAAMH,EAAK1B,OAAS,uBAGhC,OAAO0B,CACT,CAAE,MAAO1B,GAEP,MADA8B,QAAQ9B,MAAM,sBAAuBA,GAC/BA,CACR,GClB2B+B,CAAqB,CAAEjC,OAAMtB,QAAOG,aAEvDuC,EAASc,SACX1C,EAAW,yCACXS,EAAQ,IACRtB,EAAS,IACTG,EAAY,IACZiB,GAAY,IAEZP,EAAW4B,EAASlB,OAAS,mCAEjC,CAAE,MAAOA,GACPV,EAAWU,EAAMX,SAAW,uCAC9B,GAmLcc,UAAU,8MAA6MC,SACxN,gBAxIHC,EAAAA,EAAAA,MAAA4B,EAAAA,SAAA,CAAA7B,SAAA,EACEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8DAA6DC,SAAA,EAC1EF,EAAAA,EAAAA,KAAA,UACEQ,QAASA,IAAMxB,EAAe,SAC9BiB,UAAW,0DACO,UAAhBlB,EACI,oEACA,8CACHmB,SACJ,iBAGDF,EAAAA,EAAAA,KAAA,UACEQ,QAASA,IAAMxB,EAAe,OAC9BiB,UAAW,0DACO,QAAhBlB,EACI,oEACA,8CACHmB,SACJ,iBAKc,UAAhBnB,IACCoB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,uCAAsCC,SAAC,WACxDF,EAAAA,EAAAA,KAAA,SACES,KAAK,QACLC,YAAY,iBACZC,MAAOrC,EACPsC,SAAWC,GAAMtC,EAASsC,EAAEC,OAAOH,OACnCV,UAAU,+GAGdE,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,uCAAsCC,SAAC,cACxDF,EAAAA,EAAAA,KAAA,SACES,KAAK,WACLC,YAAY,mDACZC,MAAOlC,EACPmC,SAAWC,GAAMnC,EAAYmC,EAAEC,OAAOH,OACtCV,UAAU,+GAGdD,EAAAA,EAAAA,KAAA,UACEQ,QAnKAO,UAClBF,EAAEmB,iBACF5C,EAAW,IACX,IAEE,MAAM4B,QAAiBiB,EAAAA,EAAMC,KAC3B,uCACA,CAAE5D,QAAOG,aAEXc,EAAKE,MAAMuB,EAASQ,KAAKW,KAAMnB,EAASQ,KAAKY,OAC7C/C,EAAS,aACX,CAAE,MAAOS,GACP,IAAIuC,EAAe,eAEG,kBAAlBvC,EAAMX,QACRkD,EAAe,+DACNvC,EAAMkB,WACfqB,EAAevC,EAAMkB,SAASQ,KAAK1B,OAAS,uBAG9CC,EAASsC,GACTT,QAAQ9B,MAAM,uBAAwBA,EACxC,GA8IkBG,UAAU,8MAA6MC,SACxN,aAMY,QAAhBnB,GAAkC,IAATE,IACxBkB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,uCAAsCC,SAAC,mBACxDF,EAAAA,EAAAA,KAAA,SACES,KAAK,MACLC,YAAY,kBACZC,MAAOhC,EACPiC,SAAWC,GAAMjC,EAASiC,EAAEC,OAAOH,OACnCV,UAAU,+GAGdD,EAAAA,EAAAA,KAAA,UACEQ,QA/JEO,UACpB3B,EAAW,IACX,IACE,MAAM4B,ODpBgBD,OAAOpC,EAAOE,KACxC,IAEE,aADuBoD,EAAAA,EAAMC,KAAK,GAAGhE,eAAsB,CAAES,QAAOE,SACpD2C,IAClB,CAAE,MAAO1B,GAAQ,IAADwC,EAAAC,EACd,MAAMpD,GAAwB,QAAdmD,EAAAxC,EAAMkB,gBAAQ,IAAAsB,GAAM,QAANC,EAAdD,EAAgBd,YAAI,IAAAe,OAAN,EAAdA,EAAsBpD,UACvBW,EAAMX,SACN,0BACf,MAAM,IAAIwC,MAAMxC,EAClB,GCW2B0C,CAAyBlD,GAC5CqC,EAASc,SACX5C,EAAQ,GACRE,EAAW,4BAEXA,EAAW,wCAEf,CAAE,MAAOU,GACPV,EAAWU,EAAMX,SAAW,uCAC9B,GAoJkBc,UAAU,8MAA6MC,SACxN,gBAMY,QAAhBnB,GAAkC,IAATE,IACxBkB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,iCAAgCC,SAAA,CAAC,gBAChCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeC,SAAEvB,QAE/CwB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,uCAAsCC,SAAC,eACxDF,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLC,YAAY,qBACZC,MAAO9B,EACP+B,SAAWC,GAAM/B,EAAO+B,EAAEC,OAAOH,OACjCV,UAAU,6IACVuC,UAAW,QAGfxC,EAAAA,EAAAA,KAAA,UACEQ,QAzKIO,UACtB3B,EAAW,IACX,IACE,MAAM4B,ODTaD,OAAOpC,EAAOE,KACrC,IACE,MAAMmC,QAAiBC,MAAM,4CAA6C,CACxEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAE3C,QAAOE,UAG1B2C,QAAaR,EAASS,OAE5B,IAAKT,EAASU,GACZ,MAAM,IAAIC,MAAMH,EAAK1B,OAAS,2BAGhC,OAAO0B,CACT,CAAE,MAAO1B,GAEP,MADA8B,QAAQ9B,MAAM,0BAA2BA,GACnCA,CACR,GCX2B+B,CAAsBlD,EAAOE,GAEhDmC,EAASc,SAAWd,EAASoB,OAC/B3C,EAAMuB,EAASmB,KAAMnB,EAASoB,OAC9B/C,EAAS,eAETD,EAAW4B,EAASlB,OAAS,6CAEjC,CAAE,MAAOA,GACPV,EAAWU,EAAMX,SAAW,uCAC9B,GA6JkBc,UAAU,4MAA2MC,SACtN,qBA+CRf,IACCa,EAAAA,EAAAA,KAAA,KAAGC,UAAW,oCACZd,EAAQsD,SAAS,YAActD,EAAQsD,SAAS,QAC5C,8BACA,2BACHvC,SACAf,IAGJW,IACCE,EAAAA,EAAAA,KAAA,KAAGC,UAAU,0DAAyDC,SACnEJ,UAMTK,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,0BAA0BG,MAAO,CAAEC,WAAY,6BAA8BH,SAAC,8CAG3FF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gCAAgCG,MAAO,CAAEC,WAAY,6BAA8BH,SAAC,oD","sources":["services/authService.js","pages/Login.jsx"],"sourcesContent":["// Placeholder authentication service\r\nimport axios from 'axios';\r\n\r\n// Remove unused variable\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nexport const loginWithEmail = async (email, password) => {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/api/auth/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n\r\n    const data = await response.json();\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(data.error || 'Login failed');\r\n    }\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const loginWithOTP = async (phone, otp) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/verify-otp`, { phone, otp });\r\n    return response.data;\r\n  } catch (error) {\r\n    const message = error.response?.data?.message || \r\n                   error.message || \r\n                   'OTP verification failed';\r\n    throw new Error(message);\r\n  }\r\n};\r\n\r\n// Add this function for sending OTP\r\nexport const sendOTP = async (phone) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/send-otp`, { phone });\r\n    return response.data;\r\n  } catch (error) {\r\n    // Improved error message\r\n    const message = error.response?.data?.message || \r\n                   error.message || \r\n                   'Failed to send OTP';\r\n    throw new Error(message);\r\n  }\r\n};\r\n\r\nexport const verifyOTP = async (phone, otp) => {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/api/auth/verify-otp', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ phone, otp }),\r\n    });\r\n\r\n    const data = await response.json();\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(data.error || 'OTP verification failed');\r\n    }\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('OTP verification error:', error);\r\n    throw error;\r\n  }\r\n}; \r\n\r\nexport const register = async (userData) => {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/api/auth/register', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(userData),\r\n    });\r\n\r\n    const data = await response.json();\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(data.error || 'Registration failed');\r\n    }\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('Registration error:', error);\r\n    throw error;\r\n  }\r\n}; ","import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport * as authService from '../services/authService';\r\nimport axios from 'axios'; // Added axios import\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [loginMethod, setLoginMethod] = useState('email');\r\n  const [step, setStep] = useState(1);\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate();\r\n  const auth = useAuth();\r\n  const { login } = auth;\r\n  const [isSignup, setIsSignup] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [error, setError] = useState(''); // Added error state\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setMessage('');\r\n    try {\r\n      // Use absolute URL with correct port\r\n      const response = await axios.post(\r\n        'http://localhost:6000/api/auth/login', // Changed to 6000\r\n        { email, password }\r\n      );\r\n      auth.login(response.data.user, response.data.token);\r\n      navigate('/dashboard');\r\n    } catch (error) {\r\n      let errorMessage = 'Login failed';\r\n      \r\n      if (error.message === 'Network Error') {\r\n        errorMessage = 'Backend server not running. Start server with: node index.js';\r\n      } else if (error.response) {\r\n        errorMessage = error.response.data.error || 'Invalid credentials';\r\n      }\r\n      \r\n      setError(errorMessage);\r\n      console.error('Login error details:', error);\r\n    }\r\n  };\r\n\r\n  const handleSendOTP = async () => {\r\n    setMessage('');\r\n    try {\r\n      const response = await authService.loginWithOTP(phone);\r\n      if (response.success) {\r\n        setStep(2);\r\n        setMessage('OTP sent to your phone!');\r\n      } else {\r\n        setMessage('Failed to send OTP. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      setMessage(error.message || 'An error occurred. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleVerifyOTP = async () => {\r\n    setMessage('');\r\n    try {\r\n      const response = await authService.verifyOTP(phone, otp);\r\n      \r\n      if (response.success && response.token) {\r\n        login(response.user, response.token);\r\n        navigate('/dashboard');\r\n      } else {\r\n        setMessage(response.error || 'OTP verification failed. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      setMessage(error.message || 'An error occurred. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleSignup = async () => {\r\n    setMessage('');\r\n    try {\r\n      const response = await authService.register({ name, email, password });\r\n      \r\n      if (response.success) {\r\n        setMessage('Signup successful! You can now login.');\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setIsSignup(false);\r\n      } else {\r\n        setMessage(response.error || 'Signup failed. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      setMessage(error.message || 'An error occurred. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-blue-500 via-purple-600 to-red-500 p-4\">\r\n      <div className=\"w-full max-w-md\">\r\n        <div className=\"text-center mb-8\">\r\n          <h1 className=\"text-5xl font-bold text-white mb-2 tracking-wider\" \r\n              style={{ \r\n                fontFamily: \"'Montserrat', sans-serif\",\r\n                textShadow: '0 2px 10px rgba(0,0,0,0.2)',\r\n                letterSpacing: '1px'\r\n              }}>\r\n            Trade Finder\r\n          </h1>\r\n          <div className=\"w-20 h-1 bg-white mx-auto rounded-full\"></div>\r\n        </div>\r\n\r\n        <div className=\"flex justify-center mb-6\">\r\n          <button\r\n            onClick={() => setIsSignup(false)}\r\n            className={`px-6 py-2 font-semibold rounded-l-lg transition-colors ${\r\n              !isSignup \r\n                ? 'bg-white text-blue-600 shadow-md' \r\n                : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n            }`}\r\n          >\r\n            Login\r\n          </button>\r\n          <button\r\n            onClick={() => setIsSignup(true)}\r\n            className={`px-6 py-2 font-semibold rounded-r-lg transition-colors ${\r\n              isSignup \r\n                ? 'bg-white text-blue-600 shadow-md' \r\n                : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n            }`}\r\n          >\r\n            Sign Up\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"bg-white rounded-2xl shadow-xl overflow-hidden\">\r\n          <div className=\"p-8\">\r\n            {!isSignup ? (\r\n              <>\r\n                <div className=\"flex mb-6 rounded-lg overflow-hidden border border-gray-200\">\r\n                  <button\r\n                    onClick={() => setLoginMethod('email')}\r\n                    className={`flex-1 py-3 font-semibold transition-all duration-300 ${\r\n                      loginMethod === 'email'\r\n                        ? 'bg-gradient-to-r from-blue-500 to-purple-600 text-white shadow-md'\r\n                        : 'bg-gray-100 text-gray-700 hover:bg-gray-50'\r\n                    }`}\r\n                  >\r\n                    Email Login\r\n                  </button>\r\n                  <button\r\n                    onClick={() => setLoginMethod('otp')}\r\n                    className={`flex-1 py-3 font-semibold transition-all duration-300 ${\r\n                      loginMethod === 'otp'\r\n                        ? 'bg-gradient-to-r from-blue-500 to-purple-600 text-white shadow-md'\r\n                        : 'bg-gray-100 text-gray-700 hover:bg-gray-50'\r\n                    }`}\r\n                  >\r\n                    OTP Login\r\n                  </button>\r\n                </div>\r\n\r\n                {loginMethod === 'email' && (\r\n                  <div className=\"space-y-4\">\r\n                    <div>\r\n                      <label className=\"block text-gray-700 mb-1 font-medium\">Email</label>\r\n                      <input\r\n                        type=\"email\"\r\n                        placeholder=\"your@email.com\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"block text-gray-700 mb-1 font-medium\">Password</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        placeholder=\"••••••••\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                      />\r\n                    </div>\r\n                    <button\r\n                      onClick={handleLogin}\r\n                      className=\"w-full bg-gradient-to-r from-blue-500 to-purple-600 text-white py-3 rounded-lg font-semibold shadow-lg hover:from-blue-600 hover:to-purple-700 transition-all duration-300 transform hover:-translate-y-0.5\"\r\n                    >\r\n                      Login\r\n                    </button>\r\n                  </div>\r\n                )}\r\n\r\n                {loginMethod === 'otp' && step === 1 && (\r\n                  <div className=\"space-y-4\">\r\n                    <div>\r\n                      <label className=\"block text-gray-700 mb-1 font-medium\">Mobile Number</label>\r\n                      <input\r\n                        type=\"tel\"\r\n                        placeholder=\"+91 98765 43210\"\r\n                        value={phone}\r\n                        onChange={(e) => setPhone(e.target.value)}\r\n                        className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                      />\r\n                    </div>\r\n                    <button\r\n                      onClick={handleSendOTP}\r\n                      className=\"w-full bg-gradient-to-r from-blue-500 to-purple-600 text-white py-3 rounded-lg font-semibold shadow-lg hover:from-blue-600 hover:to-purple-700 transition-all duration-300 transform hover:-translate-y-0.5\"\r\n                    >\r\n                      Send OTP\r\n                    </button>\r\n                  </div>\r\n                )}\r\n\r\n                {loginMethod === 'otp' && step === 2 && (\r\n                  <div className=\"space-y-4\">\r\n                    <p className=\"text-gray-600 text-center mb-2\">\r\n                      OTP sent to <span className=\"font-semibold\">{phone}</span>\r\n                    </p>\r\n                    <div>\r\n                      <label className=\"block text-gray-700 mb-1 font-medium\">Enter OTP</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter 6-digit code\"\r\n                        value={otp}\r\n                        onChange={(e) => setOtp(e.target.value)}\r\n                        className=\"w-full p-3 border border-gray-300 rounded-lg text-center text-xl tracking-widest focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                        maxLength={6}\r\n                      />\r\n                    </div>\r\n                    <button\r\n                      onClick={handleVerifyOTP}\r\n                      className=\"w-full bg-gradient-to-r from-green-500 to-teal-600 text-white py-3 rounded-lg font-semibold shadow-lg hover:from-green-600 hover:to-teal-700 transition-all duration-300 transform hover:-translate-y-0.5\"\r\n                    >\r\n                      Verify OTP\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-gray-700 mb-1 font-medium\">Full Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"John Doe\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-gray-700 mb-1 font-medium\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    placeholder=\"your@email.com\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-gray-700 mb-1 font-medium\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"••••••••\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  />\r\n                </div>\r\n                <button\r\n                  onClick={handleSignup}\r\n                  className=\"w-full bg-gradient-to-r from-blue-500 to-purple-600 text-white py-3 rounded-lg font-semibold shadow-lg hover:from-blue-600 hover:to-purple-700 transition-all duration-300 transform hover:-translate-y-0.5\"\r\n                >\r\n                  Sign Up\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            {message && (\r\n              <p className={`mt-4 text-center p-3 rounded-lg ${\r\n                message.includes('success') || message.includes('sent') \r\n                  ? 'bg-green-100 text-green-700' \r\n                  : 'bg-red-100 text-red-700'\r\n              }`}>\r\n                {message}\r\n              </p>\r\n            )}\r\n            {error && ( // Added error message display\r\n              <p className=\"mt-4 text-center p-3 rounded-lg bg-red-100 text-red-700\">\r\n                {error}\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-8 text-center\">\r\n          <p className=\"text-white text-lg mb-1\" style={{ fontFamily: \"'Dancing Script', cursive\" }}>\r\n            with love ❤️ from Omkar Kalagi\r\n          </p>\r\n          <p className=\"text-white opacity-80 text-sm\" style={{ fontFamily: \"'Dancing Script', cursive\" }}>\r\n            By Kalagi Group of Companies since 2025\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login; "],"names":["API_URL","process","REACT_APP_API_URL","Login","email","setEmail","useState","password","setPassword","phone","setPhone","otp","setOtp","loginMethod","setLoginMethod","step","setStep","message","setMessage","navigate","useNavigate","auth","useAuth","login","isSignup","setIsSignup","name","setName","error","setError","_jsx","className","children","_jsxs","style","fontFamily","textShadow","letterSpacing","onClick","type","placeholder","value","onChange","e","target","async","response","fetch","method","headers","body","JSON","stringify","userData","data","json","ok","Error","console","authService","success","_Fragment","preventDefault","axios","post","user","token","errorMessage","_error$response","_error$response$data","maxLength","includes"],"sourceRoot":""}